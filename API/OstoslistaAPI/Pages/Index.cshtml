@page
@using System.Web
@model OstoslistaAPI.Pages.IndexModel
@{
    ViewData["Title"] = $"Tuotteet";
}

<div class="text-center">
    <h1>Ostoslista@(string.IsNullOrWhiteSpace(Model.ShopperName) ? "" : $" ({Model.HtmlEncodedShopperName})")</h1>
    <div id="ostolistaTuotteet" style="display: none;">
        <div>
            <input type="text" id="uusiTuote" placeholder="Syötä uusi tuote..." onkeypress="return keyPress(event, sendNew);" class="newItem"/>&nbsp;
            <input type="button" value="Lähetä" onclick="sendNew();" class="buttons"/>
        </div>
        <div class="shoppingList" id="ostoslista">Ladataan...</div>
        <div class="buyCheckedItems"><input type="button" value="Maksa valitut tuotteet" onclick="buyCheckedItems();" class="buttons"/></div>
    </div>
</div>

<script type="text/javascript">
    function buyCheckedItems() {
        $.ajax({
            type: 'DELETE',
            url: "/api/ShoppingList/@Model.UrlEncodedShopperName/unpending",
            dataType: 'json',
            success: function() {
                loadShoppingListData();
            },
            error: function(e) {
                console.log("ERROR: " + e);
            }
        });
    }

    function keyPress(e, delegate) {
        if (e.keyCode === 13) {
            delegate();
            return false;
        }
    }

    function sendNew() {
        var elem = $("#uusiTuote");
  
        if (!elem) {
            return;
        }

        var title = elem.val().trim();

        if (!title) {
            return;
        }

        $.ajax({
            type: 'POST',
            url: "/api/ShoppingList/@Model.UrlEncodedShopperName",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            data: JSON.stringify({
                Title: title
            }),
            success: function(data) {
                addItemToList(data, true);
                elem.val("");
                elem.focus();
            },
            error: function(e) {
                console.log("ERROR: " + e);
            }
        });
    }

    function togglePending() {
        var elem = $(this).find("i");
        var guidElement = $(this).find('input[name="tuoteId"]');

        if (!elem || !guidElement) {
            return;
        }

        var setPending = elem.hasClass("fa-check-circle");

        $.ajax({
            type: 'PUT',
            url: "/api/ShoppingList/" + guidElement.val() + "/" + setPending,
            dataType: 'json',
            success: function() {
                if (setPending) {
                    elem.removeClass("fa-check-circle");
                    elem.addClass("fa-circle");
                } else {
                    elem.removeClass("fa-circle");
                    elem.addClass("fa-check-circle");
                }
            },
            error: function(e) {
                console.log("ERROR: " + e);
            }
        });
    }

    function addItemToList(data, addPlus) {
        var row = $('<div class="shoppingList-item-row"></div>');
        row.prop("title", data.Title);
        var cell1 = $('<div class="shoppingList-item-cell"></div>');
        if (data.Pending) {
            cell1.append($('<i name="tuoteKorissa" class="far fa-circle"></i>'));
        } else {
            cell1.append($('<i name="tuoteKorissa" class="far fa-check-circle"></i>'));
        }
        row.append(cell1);
        var cell2 = $('<div class="shoppingList-item-cell"></div>');
        cell2.append($('<span style="margin-left: 10px"></span>').text(data.Title));
        cell2.append($('<input type="hidden" name="tuoteId"/>').val(data.Id));
        if (addPlus) {
            cell2.append($('<i class="fa fa-plus-circle shoppingList-item-new" aria-hidden="true"></i>').val(data.Id));
        }
        row.append(cell2);
        row.click(togglePending);
        row.hide().appendTo("#ostoslista").fadeIn(1000);
    }

    function openShoppingList() {
        var id = $("#ostoskassinTunnus");

        if (!id) {
            return;
        }

        window.location = "/?lista=" + encodeURIComponent(id.val());
    }

    function loadShoppingListData() {
        var elem = $("#ostolistaTuotteet");

        if (@(Model.ShopperName?.Length ?? 0) === 0) {
            elem.html("");
            elem.append($("<h2>Käytä ostoskassi tunnustasi!</h2>"));
            var row = $("<div></div>");
            row.append($('<input type="text" id="ostoskassinTunnus" size="10" placeholder="Syötä tunnus..." onkeypress="return keyPress(event, openShoppingList);" class="newItem"/>'));
            row.append("&nbsp;");
            row.append($('<input type="button" value="Avaa" onclick="openShoppingList();" class="buttons" />'));
            elem.append(row);
            elem.show();
            return;
        }

        elem.show();

        $.ajax({
            type: 'GET',
            url: "/api/ShoppingList/@Model.UrlEncodedShopperName",
            dataType: 'json',
            success: loadShoppingListDataSuccess,
            error: function(e) {
                console.log("ERROR: " + e);
            }
        });
    }

    function loadShoppingListDataSuccess(data) {
        var ostoslista = $("#ostoslista");
        ostoslista.html("");

        for (var i = 0; data && i < data.length; i++) {
            addItemToList(data[i]);
        };
    }

    $(document).ready(function () {
        $.blockUI.defaults.css = {};

        $.ajaxSetup({
            beforeSend: function() {
                $.blockUI({
                    message: '<div id="waitIndContainer"><div class="waitInd"><i class="fas fa-cog fa-spin"></i> Hetkinen...</div></div>'
                });
            },
            complete: function () {
                $.unblockUI();
            }
        });

        loadShoppingListData();
    });
</script>
